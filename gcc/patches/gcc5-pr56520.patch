From 4206ef8f8da141d65dac9eb5e702809c488ae101 Mon Sep 17 00:00:00 2001
From: kargl <kargl@138bc75d-0d04-0410-961f-82ee72b054a4>
Date: Thu, 16 Jul 2015 18:44:56 +0000
Subject: [PATCH] 2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/56520
	* match.c (gfc_match_name): Special case unary minus and plus.

2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/56520
	* gfortran.dg/pr56520.f90: New test.


git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/branches/gcc-5-branch@225900 138bc75d-0d04-0410-961f-82ee72b054a4
---
 gcc/fortran/ChangeLog                 |  5 +++++
 gcc/fortran/match.c                   |  5 ++++-
 gcc/testsuite/ChangeLog               |  5 +++++
 gcc/testsuite/gfortran.dg/pr56520.f90 | 13 +++++++++++++
 4 files changed, 27 insertions(+), 1 deletion(-)
 create mode 100644 gcc/testsuite/gfortran.dg/pr56520.f90

diff --git a/gcc/fortran/ChangeLog b/gcc/fortran/ChangeLog
index 5fa27b8..816e0b2 100644
--- a/gcc/fortran/ChangeLog
+++ b/gcc/fortran/ChangeLog
@@ -1,5 +1,10 @@
 2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>
 
+	PR fortran/56520
+	* match.c (gfc_match_name): Special case unary minus and plus.
+
+2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>
+
 	* io.c (check_char_variable): New function.
 	(match_open_element, match_close_element, match_file_element,
 	match_dt_element, match_inquire_element, match_wait_element): Use it.
diff --git a/gcc/fortran/match.c b/gcc/fortran/match.c
index fd3bd4c..3047205 100644
--- a/gcc/fortran/match.c
+++ b/gcc/fortran/match.c
@@ -544,7 +544,10 @@ gfc_match_name (char *buffer)
   c = gfc_next_ascii_char ();
   if (!(ISALPHA (c) || (c == '_' && flag_allow_leading_underscore)))
     {
-      if (!gfc_error_flag_test () && c != '(')
+      /* Special cases for unary minus and plus, which allows for a sensible
+	 error message for code of the form 'c = exp(-a*b) )' where an
+	 extra ')' appears at the end of statement.  */
+      if (!gfc_error_flag_test () && c != '(' && c != '-' && c != '+')
 	gfc_error ("Invalid character in name at %C");
       gfc_current_locus = old_loc;
       return MATCH_NO;
diff --git a/gcc/testsuite/ChangeLog b/gcc/testsuite/ChangeLog
index 7cb48dd..a55da11 100644
--- a/gcc/testsuite/ChangeLog
+++ b/gcc/testsuite/ChangeLog
@@ -1,5 +1,10 @@
 2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>
 
+	PR fortran/56520
+	* gfortran.dg/pr56520.f90: New test.
+
+2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>
+
 	* gfortran.dg/iomsg_2.f90: New test.
 
 2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>
diff --git a/gcc/testsuite/gfortran.dg/pr56520.f90 b/gcc/testsuite/gfortran.dg/pr56520.f90
new file mode 100644
index 0000000..b074b80
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/pr56520.f90
@@ -0,0 +1,13 @@
+! { dg-do compile }
+! PR fortran/56520
+!
+program misleading
+    implicit none
+    real a, c
+    a = 1.0
+    c = exp(+a) )    ! { dg-error "Unclassifiable statement" }
+    c = exp(-a) )    ! { dg-error "Unclassifiable statement" }
+    c = exp((a)) )   ! { dg-error "Unclassifiable statement" }
+    c = exp(a) )     ! { dg-error "Unclassifiable statement" }
+    c = exp(a)
+end program misleading
-- 
1.9.4

