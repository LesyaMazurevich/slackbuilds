From 94adef29a2360a18651fe07823d6c43249f33c3b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ludger=20Kr=C3=A4mer?= <dbluelle@onlinehome.de>
Date: Sat, 21 Mar 2015 15:13:19 +0100
Subject: [PATCH] fix compilation for LLVM 3.6

---
 CMakeLists.txt        |  3 +++
 conf/FindLLVM.cmake   |  8 ++++++++
 src/scripting/abc.cpp | 10 ++++++++++
 3 files changed, 21 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index e5e382d..2952837 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -244,6 +244,9 @@ ENDIF(${LLVM_STRING_VERSION} VERSION_GREATER 3.3)
 IF(${LLVM_STRING_VERSION} VERSION_GREATER 3.3)
 	ADD_DEFINITIONS(-DLLVM_35)
 ENDIF(${LLVM_STRING_VERSION} VERSION_GREATER 3.3)
+IF(NOT ${LLVM_STRING_VERSION} VERSION_LESS 3.6)
+	ADD_DEFINITIONS(-DLLVM_36)
+ENDIF(NOT ${LLVM_STRING_VERSION} VERSION_LESS 3.6)
 INCLUDE(FindZLIB REQUIRED)
 INCLUDE(FindFreetype REQUIRED)
 IF(NOT(ENABLE_GLES2))
diff --git a/conf/FindLLVM.cmake b/conf/FindLLVM.cmake
index d8509d3..51b776c 100644
--- a/conf/FindLLVM.cmake
+++ b/conf/FindLLVM.cmake
@@ -185,11 +185,19 @@ else (LLVM_INCLUDE_DIR)
   FIND_LLVM_LIBS( ${LLVM_CONFIG_EXECUTABLE} "core ipa ipo instrumentation bitreader bitwriter linker" LLVM_LIBS_CORE LLVM_LIBS_CORE_OBJECTS )
   set(LLVM_LIBS_CORE "-lLLVM-3.6")
   MESSAGE(STATUS "LLVM core libs: " ${LLVM_LIBS_CORE})
+  IF(${LLVM_STRING_VERSION} VERSION_GREATER 3.6)
+  IF(APPLE AND UNIVERSAL)
+    FIND_LLVM_LIBS( ${LLVM_CONFIG_EXECUTABLE} "engine native x86 PowerPC ARM" LLVM_LIBS_JIT LLVM_LIBS_JIT_OBJECTS )
+  ELSE(APPLE AND UNIVERSAL)
+    FIND_LLVM_LIBS( ${LLVM_CONFIG_EXECUTABLE} "engine native" LLVM_LIBS_JIT LLVM_LIBS_JIT_OBJECTS )
+  ENDIF(APPLE AND UNIVERSAL)
+  ELSE(${LLVM_STRING_VERSION} VERSION_GREATER 3.6)
   IF(APPLE AND UNIVERSAL)
     FIND_LLVM_LIBS( ${LLVM_CONFIG_EXECUTABLE} "jit native x86 PowerPC ARM" LLVM_LIBS_JIT LLVM_LIBS_JIT_OBJECTS )
   ELSE(APPLE AND UNIVERSAL)
     FIND_LLVM_LIBS( ${LLVM_CONFIG_EXECUTABLE} "jit native" LLVM_LIBS_JIT LLVM_LIBS_JIT_OBJECTS )
   ENDIF(APPLE AND UNIVERSAL)
+  ENDIF(${LLVM_STRING_VERSION} VERSION_GREATER 3.6)
   set(LLVM_LIBS_JIT "")
   set(LLVM_LIBS_JIT_OBJECTS "")
   MESSAGE(STATUS "LLVM JIT libs: " ${LLVM_LIBS_JIT})
   
diff --git a/src/scripting/abc.cpp b/src/scripting/abc.cpp
index c4575e1..259201f 100644
--- a/src/scripting/abc.cpp
+++ b/src/scripting/abc.cpp
@@ -24,7 +24,9 @@
 #include "compat.h"
 
 #include <llvm/ExecutionEngine/ExecutionEngine.h>
+#ifndef LLVM_36
 #include <llvm/ExecutionEngine/JIT.h>
+#endif
 #include <llvm/PassManager.h>
 #ifdef HAVE_IR_DATALAYOUT_H
 #  include <llvm/IR/Module.h>
@@ -1560,7 +1562,11 @@ void ABCVm::Run(ABCVm* th)
 #endif
 		llvm::InitializeNativeTarget();
 		th->module=new llvm::Module(llvm::StringRef("abc jit"),th->llvm_context());
+#ifdef LLVM_36
+		llvm::EngineBuilder eb(std::unique_ptr<llvm::Module>(th->module));
+#else
 		llvm::EngineBuilder eb(th->module);
+#endif
 		eb.setEngineKind(llvm::EngineKind::JIT);
 #ifdef LLVM_31
 		eb.setTargetOptions(Opts);
@@ -1487,7 +1493,11 @@ void ABCVm::Run(ABCVm* th)
 		assert_and_throw(th->ex);
 
 		th->FPM=new llvm::FunctionPassManager(th->module);
+#ifdef LLVM_36
+		th->FPM->add(new llvm::DataLayoutPass());
+#else
 		th->module->setDataLayout(new llvm::DataLayout(*th->ex->getDataLayout()));
+#endif
 #ifdef EXPENSIVE_DEBUG
 		//This is pretty heavy, do not enable in release
 		th->FPM->add(llvm::createVerifierPass());
