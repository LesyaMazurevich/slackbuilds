diff -up src/language_gui.py.noyum src/language_gui.py
--- src/language_gui.py.noyum	2015-03-12 07:32:05.000000000 -0300
+++ src/language_gui.py	2015-03-19 00:21:35.483922447 -0300
@@ -21,7 +21,6 @@
 from gi.repository import Gtk
 import sys
 import language_backend
-import install_packages
 import string
 
 import gettext
@@ -43,7 +42,6 @@ class ChildWindow(Gtk.ApplicationWindow)
 
         self.listmodel = Gtk.ListStore(str, str, str, str)
         self.lang_backend = language_backend.LanguageBackend()
-        self.instpkg = install_packages.InstallLangpack()
         default_lang, self.installed_langs = \
                 self.lang_backend.get_installed_langs()
         self.original_lang = default_lang
@@ -257,44 +255,6 @@ class ChildWindow(Gtk.ApplicationWindow)
         else:
             self.button_ok.set_sensitive(True)
 
-    def langpkg_already_installed(self):
-        ''' Method to check if requested language packages are
-            already installed '''
-        sdlg = Gtk.MessageDialog(transient_for=self, modal=True, \
-                        message_type=Gtk.MessageType.INFO, buttons=Gtk.ButtonsType.OK,
-        text=(_("Language support packages are already installed. "
-                            "Therefore, \nsetting the default language only.")))
-        rc = sdlg.run()
-        sdlg.destroy()
-
-        if rc == Gtk.ResponseType.OK:
-            return 1
-
-    def no_pkg_support(self):
-        """ There are no packages available to support this language """
-        sdlg = Gtk.MessageDialog(transient_for=self, modal=True, \
-                        message_type=Gtk.MessageType.INFO, buttons=Gtk.ButtonsType.OK,
-        text=(_("There are no packages available yet to support this "
-                 "language. Therefore, \nsetting the default language only.")))
-        rc = sdlg.run()
-        sdlg.destroy()
-
-        if rc == Gtk.ResponseType.OK:
-            return 1
-
-    def installed_pkg_support(self, d_lang):
-        """ Language packages are installed now for the requested language """
-        msgd = d_lang + _(" language support is now installed.\nSetting it as "
-                           "the default system language.")
-        sdlg = Gtk.MessageDialog(transient_for=self, modal=True, \
-                        message_type=Gtk.MessageType.INFO, buttons=Gtk.ButtonsType.OK,
-        text=msgd)
-        rc = sdlg.run()
-        sdlg.destroy()
-
-        if rc == Gtk.ResponseType.OK:
-            return 1
-
     def ok_btn(self, button):
         ''' Method to handle Ok button click '''
         (model, itr) = self.selection.get_selected()
@@ -305,20 +265,8 @@ class ChildWindow(Gtk.ApplicationWindow)
 
         if default_lang.endswith(".UTF-8"):
             dlang = default_lang[:-6]
-            installed = self.instpkg.install_packages(dlang)
         else:
             dlang = default_lang
-            installed = self.instpkg.install_packages(dlang)
-
-        if installed == "LangPackAlreadyInstalled":
-            self.langpack_already_installed()
-        elif installed == "LangPkgAlreadyInstalled":
-            self.langpkg_already_installed()
-        elif installed == "LangPkgNoSupport":
-            self.no_pkg_support()
-        elif installed == "LangSupportInstalled":
-            self.installed_pkg_support(dlang)
-
 
         if self.installed_langs == None:
             self.lang_backend.write_locale_conf(default_lang, "", \
diff -up src/language_tui.py.noyum src/language_tui.py
--- src/language_tui.py.noyum	2015-03-12 07:32:05.000000000 -0300
+++ src/language_tui.py	2015-03-19 00:20:23.346266239 -0300
@@ -21,7 +21,6 @@
 import snack
 import locale
 import language_backend
-import install_packages
 import subprocess
 import gettext
 import string
@@ -136,32 +135,10 @@ class LanguageWindow(object):
 
     def run_ui(self, screen):
         langid = self.lang_backend.remove_encoding(self.default_lang)
-        instpkgs = install_packages.InstallLangpack()
         if langid not in self.langlist_with_cc:
             langcode = langid.split("_")[0]
         else:
             langcode = langid
-        installed = instpkgs.check_if_already_installed(langcode)
-        if installed is "no":
-            screen.finish()
-            cstr = _(" language support is not installed, do you want to "
-                        "install it?")
-            cstr = langid + cstr
-            cscreen = snack.SnackScreen()
-            bb = snack.ButtonBar(cscreen, ["OK", "Cancel"])
-            text_box = snack.TextboxReflowed(40, cstr)
-            # TRANSLATORS: Confirming the installation
-            gc = snack.GridFormHelp(screen, _("Installing Confirm"),
-                                                     "kbdtype", 1, 4)
-            gc.add(text_box, 0, 0)
-            gc.add(bb, 0, 3, growx=1)
-            rc = gc.runOnce()
-            button = bb.buttonPressed(rc)
-            if button == "ok":
-                cscreen.finish()
-                self.lang_not_installed(instpkgs, langid, langcode)
-        else:
-            self.lang_already_installed(langid)
 
     def draw_ui(self, screen):
         bb = snack.ButtonBar(screen, ["Yes", "No"])
