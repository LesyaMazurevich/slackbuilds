#!/bin/sh
#-- docbook-dtds for Slackware --
# Build script by Phantom X <megaphantomx at bol.com.br>
# Suggested usage: $ docbook-dtds.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008-2014 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.oasis-open.org/docbook/

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set YES for native build with gcc >= 4.2
SB_NATIVE=${SB_NATIVE:-NO}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

NAME=docbook-dtds
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-1.0}
# sgml docbk??.zip
VERG1="3.0 3.1 4.0 4.1"
# sgml docbook-?.?.zip
VERG2="4.2"
# sgml docbook-?.?.zip
VERG3="4.3 4.4 4.5"
# xml docbkx???.zip
VERX1="4.1.2"
# xml docbook-xml-?.?.zip
VERX2="4.2"
# xml docbook-?.?.zip
VERX3="4.3 4.4 4.5"
ARCH=noarch
SLKTARGET=${SLKTARGET:-i586}
SLKDTARGET=${SLKDTARGET:-slackware}
BUILD=${BUILD:-2}
NJOBS=${NJOBS:-$(( $(getconf _NPROCESSORS_ONLN) + 1 ))}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/linuxdoc/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGFORMAT=${PKGFORMAT:-txz}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

DATE=$(LC_ALL=C date +%d-%b-%Y)

FILESDIR=${CWD}/files

SRCDIR=${NAME}-${VERSION}
SRCARCHIVE=${SRCDIR}.tar.bz2

DL_PROG=${DL_PROG:-wget}
DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL="http://www.oasis-open.org/docbook"
DL_URL2="http://www.docbook.org"

mkdir -p ${FILESDIR}
# if source is not present, download in source rootdir if possible
( cd ${FILESDIR} || exit 1
  # sgml docbk??.zip
  for ver in ${VERG1} ;do
    file=docbk${ver//./}.zip
    test -r ${FILESDIR}/${file} || ${DL_PROG} ${DL_OPTS} ${DL_URL}/sgml/${ver}/${file} || exit 1
  done
  # sgml docbook-?.?.zip
  for ver in ${VERG2} ;do
    file=docbook-${ver}.zip
    test -r ${FILESDIR}/${file} || ${DL_PROG} ${DL_OPTS} ${DL_URL}/sgml/${ver}/${file} || exit 1
  done
  # sgml docbook-?.?.zip
  for ver in ${VERG3} ;do
    file=docbook-${ver}.zip
    test -r ${FILESDIR}/${file} || ${DL_PROG} ${DL_OPTS} ${DL_URL2}/sgml/${ver}/${file} || exit 1
  done
  # xml docbkx???.zip
  for ver in ${VERX1} ;do
    file=docbkx${ver//./}.zip
    test -r ${FILESDIR}/${file} || ${DL_PROG} ${DL_OPTS} ${DL_URL}/xml/${ver}/${file} || exit 1
  done
  # xml docbook-xml-?.?.zip
  for ver in ${VERX2} ;do
    file=docbook-xml-${ver}.zip
    test -r ${FILESDIR}/${file} || ${DL_PROG} ${DL_OPTS} ${DL_URL2}/xml/${ver}/${file} || exit 1
  done
  # xml docbook-?.?.zip
  for ver in ${VERX3} ;do
    file=docbook-xml-${ver}.zip
    test -r ${FILESDIR}/${file} || ${DL_PROG} ${DL_OPTS} ${DL_URL2}/xml/${ver}/${file} || exit 1
  done
) || exit 1

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

cd ${TMP}
rm -rf ${SRCDIR}
mkdir ${SRCDIR}
cd ${SRCDIR} || exit 1

DIRLIST=
# sgml docbk??.zip
for ver in ${VERG1} ;do
  file=docbk${ver//./}.zip
  unzip ${FILESDIR}/${file} -d ${ver}-sgml || exit 1
  DIRLIST="${DIRLIST} ${ver}-sgml"
done
# sgml docbook-?.?.zip
for ver in ${VERG2} ;do
  file=docbook-${ver}.zip
  unzip ${FILESDIR}/${file} -d ${ver}-sgml || exit 1
  DIRLIST="${DIRLIST} ${ver}-sgml"
done
# sgml docbook-?.?.zip
for ver in ${VERG3} ;do
  file=docbook-${ver}.zip
  unzip ${FILESDIR}/${file} -d ${ver}-sgml || exit 1
  DIRLIST="${DIRLIST} ${ver}-sgml"
done
# xml docbkx???.zip
for ver in ${VERX1} ;do
  file=docbkx${ver//./}.zip
  unzip ${FILESDIR}/${file} -d ${ver}-xml || exit 1
  DIRLIST="${DIRLIST} ${ver}-xml"
done
# xml docbook-xml-?.?.zip
for ver in ${VERX2} ;do
  file=docbook-xml-${ver}.zip
  unzip ${FILESDIR}/${file} -d ${ver}-xml || exit 1
  DIRLIST="${DIRLIST} ${ver}-xml"
done
# xml docbook-?.?.zip
for ver in ${VERX3} ;do
  file=docbook-xml-${ver}.zip
  unzip ${FILESDIR}/${file} -d ${ver}-xml || exit 1
  DIRLIST="${DIRLIST} ${ver}-xml"
done

chmod -R u+w,go+r-w,a-s .

if [ -r ${CWD}/apply-patches.sh ]; then
  . ${CWD}/apply-patches.sh
fi

# Increase NAMELEN (bug #36058, bug #159382).
sed -e's,\(NAMELEN\s\+\)44\(\s\*\)\?,\1256,' -i.namelen */docbook.dcl

# fix of \r\n issue from rpmlint
sed -i 's/\r//' */*.txt

# Symlinks
mkdir -p ${PKG}/etc/sgml
for fmt in sgml xml; do
  ln -s ${fmt}-docbook-4.5.cat \
     ${PKG}/etc/sgml/${fmt}-docbook.cat
done

for dir in ${DIRLIST}
do
( cd ${dir} || exit 1
  fmt=${dir#*-} vvr=${dir%%-*}
  DESTDIR=${PKG}/usr/share/sgml/docbook/${fmt}-dtd-${vvr}
  case ${fmt} in
    sgml)   mkdir -p ${DESTDIR} ; install *.dcl ${DESTDIR} ;;
    xml)    mkdir -p ${DESTDIR}/ent ; install ent/* ${DESTDIR}/ent ;;
  esac
  install *.dtd *.mod ${DESTDIR}
  install docbook.cat ${DESTDIR}/catalog

  touch ${PKG}/etc/sgml/${fmt}-docbook-${vvr}.cat.new
) || exit 1
done

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
   3.1-sgml/ChangeLog 4.1-sgml/ChangeLog */*.txt ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
  mv ${PKG}/usr/share/man ${PKG}/usr/man
  rmdir ${PKG}/usr/share
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm -f ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

cat > ${PKG}/install/doinst.sh <<EOF
config() {
  NEW="\$1"
  OLD="\$(dirname \$NEW)/\$(basename \$NEW .new)"
  # If there's no config file by that name, mv it over:
  if [ ! -r \$OLD ]; then
    mv \$NEW \$OLD
  elif [ "\$(cat \$OLD | md5sum)" = "\$(cat \$NEW | md5sum)" ]; then
    # toss the redundant copy
    rm \$NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}
## List of conf files to check.  The conf files in your package should end in .new
EOF

( cd ${PKG}
  find etc/ -name '*.new' -exec echo config {} ';' | sort >> ${PKG}/install/doinst.sh
  find etc/ -name '*.new' -a -size 0 -exec echo rm -f {} ';' | sort >> ${PKG}/install/doinst.sh
  echo >> ${PKG}/install/doinst.sh
)

mkdir -p ${PKG}/var/log/setup
cat > ${PKG}/var/log/setup/setup.10.${NAME} <<'EOF'
#!/bin/sh
#BLURB="Updates stylesheets catalog with docbook-dtds"
EOF
cat > ${PKG}/var/log/setup/setup.10.${NAME}-jade <<'EOF'
#!/bin/sh
#BLURB="Updates openjade stylesheets catalog with docbook-dtds"
EOF

for file in ${PKG}/install/doinst.sh ${PKG}/var/log/setup/setup.10.${NAME} ;do
cat >> ${file} <<'EOF'
if [ -d etc/xml ] && [ -x usr/bin/xmlcatalog ] ;then
catcmd='chroot . /usr/bin/xmlcatalog --noout'
xmlcatalog=/usr/share/sgml/docbook/xmlcatalog

# The STYLESHEETS/catalog command is for the case in which the style sheets
# were installed after another DTD but before this DTD
for STYLESHEETS in /usr/share/sgml/docbook/dsssl-stylesheets-*; do : ; done
case ${STYLESHEETS} in
  *-"*") STYLESHEETS= ;;
esac

for dir in _DIRLIST_
do
  fmt=${dir#*-} ver=${dir%%-*} vvr=${ver}
  sgmldir=/usr/share/sgml/docbook/${fmt}-dtd-${vvr}
  ## SGML catalog
  # Update the centralized catalog corresponding to this version of the DTD
  for cat_dir in /usr/share/sgml/sgml-iso-entities-8879.1986 ${sgmldir} ${STYLESHEETS}; do
    ${catcmd} --sgml --add /etc/sgml/${fmt}-docbook-${vvr}.cat ${cat_dir}/catalog
  done
  ## XML catalog
  if [ ${fmt} = xml -a -w ${xmlcatalog} ]; then
    while read f desc; do
      case ${ver} in 4.[45]) f=${f/-/} ;; esac
      ${catcmd} --add public "${desc}" ${sgmldir}/${f} ${xmlcatalog}
    done <<ENDENT
      ent/iso-pub.ent	ISO 8879:1986//ENTITIES Publishing//EN
      ent/iso-grk1.ent	ISO 8879:1986//ENTITIES Greek Letters//EN
      dbpoolx.mod	-//OASIS//ELEMENTS DocBook XML Information Pool V$ver//EN
      ent/iso-box.ent	ISO 8879:1986//ENTITIES Box and Line Drawing//EN
      docbookx.dtd	-//OASIS//DTD DocBook XML V$ver//EN
      ent/iso-grk3.ent	ISO 8879:1986//ENTITIES Greek Symbols//EN
      ent/iso-amsn.ent	ISO 8879:1986//ENTITIES Added Math Symbols: Negated Relations//EN
      ent/iso-num.ent	ISO 8879:1986//ENTITIES Numeric and Special Graphic//EN
      dbcentx.mod	-//OASIS//ENTITIES DocBook XML Character Entities V$ver//EN
      ent/iso-grk4.ent	ISO 8879:1986//ENTITIES Alternative Greek Symbols//EN
      dbnotnx.mod	-//OASIS//ENTITIES DocBook XML Notations V$ver//EN
      ent/iso-dia.ent	ISO 8879:1986//ENTITIES Diacritical Marks//EN
      ent/iso-grk2.ent	ISO 8879:1986//ENTITIES Monotoniko Greek//EN
      dbgenent.mod	-//OASIS//ENTITIES DocBook XML Additional General Entities V$ver//EN
      dbhierx.mod	-//OASIS//ELEMENTS DocBook XML Document Hierarchy V$ver//EN
      ent/iso-amsa.ent	ISO 8879:1986//ENTITIES Added Math Symbols: Arrow Relations//EN
      ent/iso-amso.ent	ISO 8879:1986//ENTITIES Added Math Symbols: Ordinary//EN
      ent/iso-cyr1.ent	ISO 8879:1986//ENTITIES Russian Cyrillic//EN
      ent/iso-tech.ent	ISO 8879:1986//ENTITIES General Technical//EN
      ent/iso-amsc.ent	ISO 8879:1986//ENTITIES Added Math Symbols: Delimiters//EN
      soextblx.dtd	-//OASIS//DTD XML Exchange Table Model 19990315//EN
      calstblx.dtd	-//OASIS//DTD DocBook XML CALS Table Model V$ver//EN
      ent/iso-lat1.ent	ISO 8879:1986//ENTITIES Added Latin 1//EN
      ent/iso-amsb.ent	ISO 8879:1986//ENTITIES Added Math Symbols: Binary Operators//EN
      ent/iso-lat2.ent	ISO 8879:1986//ENTITIES Added Latin 2//EN
      ent/iso-amsr.ent	ISO 8879:1986//ENTITIES Added Math Symbols: Relations//EN
      ent/iso-cyr2.ent	ISO 8879:1986//ENTITIES Non-Russian Cyrillic//EN
ENDENT
    for f in System URI; do
      ${catcmd} --add rewrite${f} "http://www.oasis-open.org/docbook/xml/${ver}" \
  ${sgmldir} ${xmlcatalog}
    done
  fi
done

# Finally, make sure everything in /etc/sgml is readable!
/bin/chmod a+r etc/sgml/*

fi
EOF
done

for file in ${PKG}/install/doinst.sh ${PKG}/var/log/setup/setup.10.${NAME}-jade ;do
cat >> ${file} <<'EOF'
if [ -x usr/bin/xmlcatalog ] ;then
  if [ -f usr/share/sgml/openjade/catalog ] ;then
    for dir in _DIRLIST_
    do
      fmt=${dir#*-} ver=${dir%%-*} vvr=${ver}
      chroot . /usr/bin/xmlcatalog --sgml --noout --add /etc/sgml/${fmt}-docbook-${vvr}.cat \
        /usr/share/sgml/openjade/catalog
    done
  fi
fi
EOF
done

sed -i -e "s|_DIRLIST_|${DIRLIST}|g" \
  ${PKG}/install/doinst.sh ${PKG}/var/log/setup/setup.10.*

chmod 0755 ${PKG}/var/log/setup/setup.10.*

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}/patches
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
    ${CWD}/apply-patches.sh ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
    ${SBDIR}/${NAME}.SlackBuild
  install -m0644 ${CWD}/patches/*.* \
    ${SBDIR}/patches/
  rmdir ${SBDIR}/patches
fi

# Build package:
set +o xtrace        # no longer print commands upon execution
set -e

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --prepend --linkadd y --chown n --prepend ${PKGDEST}/${PKGNAME}.${PKGFORMAT} "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
