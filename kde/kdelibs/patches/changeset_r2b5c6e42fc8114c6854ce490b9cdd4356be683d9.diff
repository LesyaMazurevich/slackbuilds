commit 2b5c6e42fc8114c6854ce490b9cdd4356be683d9
Author: Marco Martin <notmart@gmail.com>
Date:   Mon Feb 9 18:22:59 2015 +0100

    sync bookmarkmanager only if change was by process
    
    This is an attempt to fix a bug that seems quite difficult to reproduce,
    It seems there is a weird race condition linked to the sync of the two files
    .local/share/user-places.xbel
    .local/share/kfileplaces/bookmarks.xml
    causing the bug
    https://bugs.kde.org/show_bug.cgi?id=343735
    all processes that are listening for changes in the bookmark manager will
    try to sync their bookmarks with the shared ones (user-places.xbel)
    and depending what process arrives first, some bookmarks may be lost
    
    The same commit will happen on kdelibs4 as well
    
    CCBUG:343735
    REVIEW:122459

diff --git a/kfile/kfileplacesmodel.cpp b/kfile/kfileplacesmodel.cpp
index 83ed1c4..24f95ad 100644
--- a/kfile/kfileplacesmodel.cpp
+++ b/kfile/kfileplacesmodel.cpp
@@ -632,6 +632,8 @@ bool KFilePlacesModel::dropMimeData(const QMimeData *data, Qt::DropAction action
         return false;
     }
 
+    d->sharedBookmarks->updateSharedBookmarks();
+
     d->reloadAndSignal();
 
     return true;
@@ -659,6 +661,8 @@ void KFilePlacesModel::addPlace(const QString &text, const KUrl &url,
         d->bookmarkManager->root().moveBookmark(bookmark, item->bookmark());
     }
 
+    d->sharedBookmarks->updateSharedBookmarks();
+
     d->reloadAndSignal();
 }
 
@@ -680,6 +684,8 @@ void KFilePlacesModel::editPlace(const QModelIndex &index, const QString &text,
     bookmark.setIcon(iconName);
     bookmark.setMetaDataItem("OnlyInApp", appName);
 
+    d->sharedBookmarks->updateSharedBookmarks();
+
     d->reloadAndSignal();
     emit dataChanged(index, index);
 }
@@ -697,6 +703,7 @@ void KFilePlacesModel::removePlace(const QModelIndex &index) const
     if (bookmark.isNull()) return;
 
     d->bookmarkManager->root().deleteBookmark(bookmark);
+    d->sharedBookmarks->updateSharedBookmarks();
     d->reloadAndSignal();
 }
 
@@ -712,6 +719,8 @@ void KFilePlacesModel::setPlaceHidden(const QModelIndex &index, bool hidden)
 
     bookmark.setMetaDataItem("IsHidden", (hidden ? "true" : "false"));
 
+    d->sharedBookmarks->updateSharedBookmarks();
+
     d->reloadAndSignal();
     emit dataChanged(index, index);
 }
diff --git a/kfile/kfileplacessharedbookmarks.cpp b/kfile/kfileplacessharedbookmarks.cpp
index c2ebd1e..5385d42 100644
--- a/kfile/kfileplacessharedbookmarks.cpp
+++ b/kfile/kfileplacessharedbookmarks.cpp
@@ -123,11 +123,6 @@ KFilePlacesSharedBookmarks::KFilePlacesSharedBookmarks(KBookmarkManager * mgr)
     connect(m_sharedBookmarkManager, SIGNAL(bookmarksChanged(QString)),
               this, SLOT(slotSharedBookmarksChanged()));
 
-    connect(m_placesBookmarkManager, SIGNAL(changed(QString,QString)),
-              this, SLOT(slotBookmarksChanged()));
-    connect(m_placesBookmarkManager, SIGNAL(bookmarksChanged(QString)),
-              this, SLOT(slotBookmarksChanged()));
-    
     integrateSharedBookmarks();
 }
 
@@ -271,7 +266,7 @@ void KFilePlacesSharedBookmarks::slotSharedBookmarksChanged()
     if (dirty) m_placesBookmarkManager->emitChanged();
 }
 
-void KFilePlacesSharedBookmarks::slotBookmarksChanged()
+void KFilePlacesSharedBookmarks::updateSharedBookmarks()
 {
     //kDebug() << "places bookmarks changed";
     bool dirty = exportSharedBookmarks();
diff --git a/kfile/kfileplacessharedbookmarks_p.h b/kfile/kfileplacessharedbookmarks_p.h
index ee70a44..654fe18 100644
--- a/kfile/kfileplacessharedbookmarks_p.h
+++ b/kfile/kfileplacessharedbookmarks_p.h
@@ -35,6 +35,8 @@ public:
     KFilePlacesSharedBookmarks(KBookmarkManager * mgr);
     ~KFilePlacesSharedBookmarks() { /* delete m_sharedBookmarkManager; */} 
       
+    void updateSharedBookmarks();
+
 private:
   
     bool integrateSharedBookmarks();
@@ -46,8 +48,6 @@ private:
 private Q_SLOTS:    
 
     void slotSharedBookmarksChanged();
-    void slotBookmarksChanged();
-  
 };
 
 
