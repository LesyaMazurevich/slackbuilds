#!/bin/bash
#
# The contents of this file are subject to the Netscape Public
# License Version 1.1 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at http://www.mozilla.org/NPL/
#
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is Netscape
# Communications Corporation.  Portions created by Netscape are
# Copyright (C) 1998 Netscape Communications Corporation. All
# Rights Reserved.
#
# Contributor(s): 
#

## 
## Usage:
##
## $ mozilla
##
## This script is meant to run a mozilla program from the mozilla
## rpm installation.
##
## The script will setup all the environment voodoo needed to make
## mozilla work.

cmdname=$(basename $0)

## don't leave any core files around
ulimit -c 0

##
## Variables
##
MOZ_DIST_BIN="LIBDIR/seamonkey"
MOZ_PROGRAM="LIBDIR/seamonkey/seamonkey"
MOZ_LAUNCHER="${MOZ_DIST_BIN}/run-mozilla.sh"
MOZ_EXTENSIONS_DIR="${MOZ_DIST_BIN}/extensions"

##
## Set MOZILLA_FIVE_HOME
##
MOZILLA_FIVE_HOME="LIBDIR/seamonkey"

export MOZILLA_FIVE_HOME

##
## Select the propper plugin dir
## Wrapped plug-ins are located in /lib/mozilla/plugins-wrapped
##
if [ -x "/usr/bin/mozilla-plugin-config" ]
then
  MOZ_PLUGIN_DIR="plugins-wrapped"
else
  MOZ_PLUGIN_DIR="plugins"
fi

##
## Set LD_LIBRARY_PATH
##
if [ "$LD_LIBRARY_PATH" ]
then
  LD_LIBRARY_PATH=LIBDIR/seamonkey:LIBDIR/seamonkey/plugins:${LD_LIBRARY_PATH}
else
  LD_LIBRARY_PATH=LIBDIR/seamonkey:LIBDIR/seamonkey/plugins
fi

export LD_LIBRARY_PATH

##
## Make sure that we set the plugin path for backwards compatibility
##
if [ "${MOZ_PLUGIN_PATH}" ]
then
  MOZ_PLUGIN_PATH=${MOZ_PLUGIN_PATH}:LIBDIR/mozilla/${MOZ_PLUGIN_DIR}:LIBDIR/seamonkey/plugins
else
  MOZ_PLUGIN_PATH=LIBDIR/mozilla/${MOZ_PLUGIN_DIR}:LIBDIR/seamonkey/plugins
fi
export MOZ_PLUGIN_PATH

##
## Set MOZ_APP_LAUNCHER for gnome-session
##
export MOZ_APP_LAUNCHER="/usr/bin/seamonkey"

##
## Set MOZ_ENABLE_PANGO is no longer used because Pango is enabled by default
## you may use MOZ_DISABLE_PANGO=1 to force disabling of pango
##
#MOZ_DISABLE_PANGO=1
#export MOZ_DISABLE_PANGO

##
## Disable the GNOME crash dialog, Moz has it's own
## 
GNOME_DISABLE_CRASH_DIALOG=1
export GNOME_DISABLE_CRASH_DIALOG

##
## Disable the SLICE allocator (rhbz#1014858)
##
export G_SLICE=always-malloc

##
## Use /var/tmp instead of /tmp because of 1GB /tmp limit in some tmpfs settings
##
TMPDIR="/var/tmp"
export TMPDIR

# OK, here's where all the real work gets done

# check system locale
MOZARGS=
# Try without a local variant first, then with a local variant
# So that pt-BR doesn't try to use pt for example
SHORTMOZLOCALE=$(echo ${LC_MESSAGES} | sed "s|_\([^.]*\).*||g")
[ -f ${MOZ_EXTENSIONS_DIR}/langpack-${SHORTMOZLOCALE}@seamonkey.mozilla.org/chrome/${SHORTMOZLOCALE}.jar ] && MOZARGS="-UILocale ${SHORTMOZLOCALE}"

MOZLOCALE=$(echo ${LC_MESSAGES} | sed "s|_\([^.]*\).*|-\1|g")
[ -f ${MOZ_EXTENSIONS_DIR}/langpack-${MOZLOCALE}@seamonkey.mozilla.org/chrome/${MOZLOCALE}.jar ] && MOZARGS="-UILocale ${MOZLOCALE}"

# if there's no command line argument and there's not a running
# instance then just fire up a new copy of the browser
if [ -z "$1" ]; then
  exec ${MOZ_LAUNCHER} ${MOZARGS} ${MOZ_PROGRAM} 2>/dev/null >/dev/null
fi

# If there's a command line argument but it doesn't begin with a -
# it's probably a url.  Try to send it to a running instance.

pass_arg_count=0
while [ $# -gt ${pass_arg_count} ]
do
  case "$1" in
    -g | --debug)
      MOZARGS="${MOZARGS} -g"
      debugging=1
      shift
      ;;
    -d | --debugger)
      if [ $# -gt 1 ]; then
        MOZARGS="${MOZARGS} -d $2"
        shift 2
      else
        shift
      fi
      ;;
    *)
      # Move the unrecognized argument to the end of the list.
      arg="$1"
      shift
      set -- "$@" "${arg}"
      pass_arg_count=$(expr $pass_arg_count + 1)
      ;;
  esac
done

# Run the browser
debugging=0
if [ ${debugging} = 1 ]
then
  echo ${MOZ_LAUNCHER} ${MOZARGS} ${MOZ_PROGRAM} ${1+"$@"}
fi

exec ${MOZ_LAUNCHER} ${MOZARGS} ${MOZ_PROGRAM} ${1+"$@"}
