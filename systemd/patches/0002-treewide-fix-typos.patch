From 45afd51974fb6a88c5b1fe0b325b7b20fd7b7449 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Torstein=20Huseb=C3=B8?= <torstein@huseboe.net>
Date: Tue, 26 May 2015 19:17:30 +0200
Subject: [PATCH 2/2] treewide: fix typos

---
 NEWS                                | 4 ++--
 man/journal-remote.conf.xml         | 2 +-
 src/libsystemd/sd-bus/bus-control.c | 2 +-
 src/libsystemd/sd-bus/bus-creds.c   | 6 +++---
 src/shared/architecture.c           | 2 +-
 src/shared/architecture.h           | 2 +-
 src/shared/capability.h             | 2 +-
 src/shared/fdset.c                  | 2 +-
 src/shared/util.c                   | 2 +-
 9 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/NEWS b/NEWS
index f72f502..ee533b4 100644
--- a/NEWS
+++ b/NEWS
@@ -3997,7 +3997,7 @@ CHANGES WITH 191:
         * HandleSleepKey= in logind.conf has been split up into
           HandleSuspendKey= and HandleHibernateKey=. The old setting
           is not available anymore. X11 and the kernel are
-          distuingishing between these keys and we should too. This
+          distinguishing between these keys and we should too. This
           also means the inhibition lock for these keys has been split
           into two.
 
@@ -4743,7 +4743,7 @@ CHANGES WITH 43:
 
         * Various functionality updates to libsystemd-login.so
 
-        * Track class of PAM logins to distuingish greeters from
+        * Track class of PAM logins to distinguish greeters from
           normal user logins.
 
         Contributions from: Kay Sievers, Lennart Poettering, Michael
diff --git a/man/journal-remote.conf.xml b/man/journal-remote.conf.xml
index a7b2227..fc60258 100644
--- a/man/journal-remote.conf.xml
+++ b/man/journal-remote.conf.xml
@@ -83,7 +83,7 @@
       <varlistentry>
         <term><varname>ServerKeyFile=</varname></term>
 
-        <listitem><para>SSL key in PEM format</para></listitem>
+        <listitem><para>SSL key in PEM format.</para></listitem>
       </varlistentry>
 
       <varlistentry>
diff --git a/src/libsystemd/sd-bus/bus-control.c b/src/libsystemd/sd-bus/bus-control.c
index fa4c281..43ddfc6 100644
--- a/src/libsystemd/sd-bus/bus-control.c
+++ b/src/libsystemd/sd-bus/bus-control.c
@@ -429,7 +429,7 @@ static int bus_populate_creds_from_items(
                                         c->mask |= SD_BUS_CREDS_PPID;
                                 } else if (item->pids.pid == 1) {
                                         /* The structure doesn't
-                                         * really distuingish the case
+                                         * really distinguish the case
                                          * where a process has no
                                          * parent and where we don't
                                          * know it because it could
diff --git a/src/libsystemd/sd-bus/bus-creds.c b/src/libsystemd/sd-bus/bus-creds.c
index fed6682..4d67619 100644
--- a/src/libsystemd/sd-bus/bus-creds.c
+++ b/src/libsystemd/sd-bus/bus-creds.c
@@ -303,7 +303,7 @@ _public_ int sd_bus_creds_get_ppid(sd_bus_creds *c, pid_t *ppid) {
         if (!(c->mask & SD_BUS_CREDS_PPID))
                 return -ENODATA;
 
-        /* PID 1 has no parent process. Let's distuingish the case of
+        /* PID 1 has no parent process. Let's distinguish the case of
          * not knowing and not having a parent process by the returned
          * error code. */
         if (c->ppid == 0)
@@ -989,7 +989,7 @@ int bus_creds_add_more(sd_bus_creds *c, uint64_t mask, pid_t pid, pid_t tid) {
         if (missing & SD_BUS_CREDS_EXE) {
                 r = get_process_exe(pid, &c->exe);
                 if (r == -ESRCH) {
-                        /* Unfortunately we cannot really distuingish
+                        /* Unfortunately we cannot really distinguish
                          * the case here where the process does not
                          * exist, and /proc/$PID/exe being unreadable
                          * because $PID is a kernel thread. Hence,
@@ -1101,7 +1101,7 @@ int bus_creds_add_more(sd_bus_creds *c, uint64_t mask, pid_t pid, pid_t tid) {
         }
 
         /* In case only the exe path was to be read we cannot
-         * distuingish the case where the exe path was unreadable
+         * distinguish the case where the exe path was unreadable
          * because the process was a kernel thread, or when the
          * process didn't exist at all. Hence, let's do a final check,
          * to be sure. */
diff --git a/src/shared/architecture.c b/src/shared/architecture.c
index 884abdd..8e72e7a 100644
--- a/src/shared/architecture.c
+++ b/src/shared/architecture.c
@@ -35,7 +35,7 @@ int uname_architecture(void) {
          * 1:1. Instead we try to clean it up and break down the
          * confusion on x86 and arm in particular.
          *
-         * We do not try to distuingish CPUs not CPU features, but
+         * We do not try to distinguish CPUs not CPU features, but
          * actual architectures, i.e. that have genuinely different
          * code. */
 
diff --git a/src/shared/architecture.h b/src/shared/architecture.h
index cb82418..f5bbf65 100644
--- a/src/shared/architecture.h
+++ b/src/shared/architecture.h
@@ -27,7 +27,7 @@
 
 /* A cleaned up architecture definition. We don't want to get lost in
  * processor features, models, generations or even ABIs. Hence we
- * focus on general family, and distuignish word width and
+ * focus on general family, and distinguish word width and
  * endianness. */
 
 enum {
diff --git a/src/shared/capability.h b/src/shared/capability.h
index 8260ae1..4eb5c2a 100644
--- a/src/shared/capability.h
+++ b/src/shared/capability.h
@@ -31,7 +31,7 @@ int have_effective_cap(int value);
 int capability_bounding_set_drop(uint64_t drop, bool right_now);
 int capability_bounding_set_drop_usermode(uint64_t drop);
 
-int drop_privileges(uid_t uid, gid_t gid, uint64_t keep_capabilites);
+int drop_privileges(uid_t uid, gid_t gid, uint64_t keep_capabilities);
 
 int drop_capability(cap_value_t cv);
 
diff --git a/src/shared/fdset.c b/src/shared/fdset.c
index 3184927..6101b62 100644
--- a/src/shared/fdset.c
+++ b/src/shared/fdset.c
@@ -32,7 +32,7 @@
 #define MAKE_SET(s) ((Set*) s)
 #define MAKE_FDSET(s) ((FDSet*) s)
 
-/* Make sure we can distuingish fd 0 and NULL */
+/* Make sure we can distinguish fd 0 and NULL */
 #define FD_TO_PTR(fd) INT_TO_PTR((fd)+1)
 #define PTR_TO_FD(p) (PTR_TO_INT(p)-1)
 
diff --git a/src/shared/util.c b/src/shared/util.c
index 34024ba..74a2190 100644
--- a/src/shared/util.c
+++ b/src/shared/util.c
@@ -5887,7 +5887,7 @@ int same_fd(int a, int b) {
 
         /* The fds refer to the same inode on disk, let's also check
          * if they have the same fd flags. This is useful to
-         * distuingish the read and write side of a pipe created with
+         * distinguish the read and write side of a pipe created with
          * pipe(). */
         fa = fcntl(a, F_GETFL);
         if (fa < 0)
-- 
2.4.1

